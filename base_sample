Option Explicit
Dim wbMain As Workbook
Dim error_count As Long
Private Sub CopyPaste1_Click()
    Dim inFile As String, outFile As String
    Dim row_num As Long
    Dim tabNameIn As String, tabNameOut As String, rangeIn As String, rangeOut As String
    Dim wbIn As Workbook, wbOut As Workbook
    Dim wsMain As Worksheet, wsErr As Worksheet

    Application.ScreenUpdating = False
    Set wbMain = ThisWorkbook
    Set wsMain = Application.ActiveSheet
    error_count = 0
    
    inFile = Application.GetOpenFilename("Excel Files, *.xls*", 2, "Select Copy From File")
    'If user cancelled
    If inFile = "False" Then
        Exit Sub
    End If
    Set wbIn = Workbooks.Open(Filename:=inFile, ReadOnly:=True)
    
    outFile = Application.GetOpenFilename("Excel Files, *.xls*", 2, "Select Paste To File")
    'If user cancelled
    If outFile = "False" Then
        Exit Sub
    End If
    Set wbOut = Workbooks.Open(outFile)

    'Call subroutine to clear Worksheet contents with "Error Report" name if it exists. A worksheet is added if it doesn't exist.
    Set wsErr = newWs(wbMain, "Error Report")
    
    row_num = 11
    Do While wsMain.Cells(row_num, 1) <> "" And wsMain.Cells(row_num, 2) <> "" _
             And wsMain.Cells(row_num, 3) <> "" And wsMain.Cells(row_num, 4) <> ""
        tabNameIn = wsMain.Cells(row_num, 1).Value
        rangeIn = wsMain.Cells(row_num, 2).Value
        tabNameOut = wsMain.Cells(row_num, 3).Value
        rangeOut = wsMain.Cells(row_num, 4).Value
        On Error GoTo ErrorHandler:
        'simple copy/paste
        wbIn.Sheets(tabNameIn).Range(rangeIn).Copy wbOut.Sheets(tabNameOut).Range(rangeOut)
        'copy only values
        'wbOut.Sheets(tabNameOut).Range(rangeOut).Value = wbIn.Sheets(tabNameIn).Range(rangeIn).Value
        row_num = row_num + 1
ErrorHandler:
    printMsgs Err.Number, row_num, error_count
Resume Next
    Loop
    If error_count = 0 Then
        wsErr.Cells(1, 1).Value = "No errors found."
    End If
    wsErr.Columns("A;A").EntireColumn.AutoFit
    wsMain.Activate
    wbOut.Close SaveChanges:=True
    wbIn.Close
    Set wbIn = Nothing
    Set wbOut = Nothing
    Set wbMain = Nothing
    Set wsMain = Nothing
    Set wsErr = Nothing
    MsgBox "Done!"
End Sub
Function newWs(wb As Workbook, name As String)
'Clear worksheet contents if worksheet "name" exists. If it doesn't exist, add it at the end.
    Dim ws As Worksheet
    Dim exist As Boolean
    exist = False
    For Each ws In wb.Worksheets
        If ws.name = name Then
            ws.Cells.Clear
            exist = True
            Set newWs = ws
        End If
    Next
    If exist = False Then
        Set newWs = wb.Sheets.Add(After:=wb.Sheets(wb.Sheets.count))
    End If
    newWs.name = name
End Function
Sub printMsgs(error_code As Integer, row As Long, err_count As Long)
    Select Case error_code
        Case 9
            error_count = err_count + 1
            wbMain.Sheets("Error Report").Cells(err_count, 1).Value = "Excel VBA Error Code 9 (Row Number " _
            & row & "): Sheet Name is incorrect or does not exist."
        Case 1004
            error_count = err_count + 1
            wbMain.Sheets("Error Report").Cells(err_count, 1).Value = "Excel VBA Error Code 1004 (Row Number " _
            & row & "): Range Name is incorrect or does not exist."
    End Select
End Sub
